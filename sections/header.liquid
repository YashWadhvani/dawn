{% comment %} Satoshi-Style Header with GSAP, Predictive Search, Dynamic Menu & Cart {% endcomment %}

{% schema %}
{
  "name": "Satoshi Header",
  "tag": "section",
  "class": "shopify-section header-section",
  "settings": [
    {
      "type": "image_picker",
      "id": "logo",
      "label": "Logo image"
    }
  ],
  "presets": [
    {
      "name": "Satoshi Header",
      "category": "Header"
    }
  ]
}
{% endschema %}

<header class="header-wrapper">
  <div class="page-width header-inner">
    <div class="header-left">
      <button id="menu-toggle" class="icon-button" aria-label="Menu">
        <!-- Hamburger SVG -->
        <svg width="24" height="24" viewBox="0 0 24 24">
          <path d="M3 6h18M3 12h18M3 18h18" stroke="#000" stroke-width="2" stroke-linecap="round"/>
        </svg>
      </button>
      <div id="menu-dropdown" class="dropdown hidden">
        {% for link in linklists['main-menu'].links %}
          <a href="{{ link.url }}" class="menu-link">{{ link.title }}</a>
        {% endfor %}
      </div>
    </div>

    <div id="site-logo" class="header-logo">
      <a href="{{ routes.root_url }}">
        {% if section.settings.logo != blank %}
          <img src="{{ section.settings.logo | image_url }}" alt="{{ shop.name }}" class="logo-img">
        {% else %}
          {{ shop.name }}
        {% endif %}
      </a>
    </div>

    <div class="header-right">
      <button id="search-toggle" class="icon-button" aria-label="Search">
        <!-- Search SVG -->
        <svg width="24" height="24" viewBox="0 0 24 24">
          <circle cx="11" cy="11" r="7" stroke="#000" stroke-width="2"/><line x1="16" y1="16" x2="21" y2="21" stroke="#000" stroke-width="2"/>
        </svg>
      </button>
      <button id="cart-toggle" class="icon-button" aria-label="Cart">
        <!-- Cart SVG -->
        <svg width="24" height="24" viewBox="0 0 24 24">
          <path d="M6 6h15l-1 9H7z" stroke="#000" stroke-width="2" fill="none"/><circle cx="9" cy="21" r="1"/><circle cx="18" cy="21" r="1"/>
        </svg>
      </button>

      <div id="cart-dropdown" class="dropdown hidden">
        <strong>Cart</strong>
        {% if cart.item_count > 0 %}
          {% for item in cart.items %}
            <div class="cart-item">
              {% if item.image %}
                <img src="{{ item.image | image_url: 'small' }}" alt="{{ item.product.title }}">
              {% else %}
                <img src="{{ item.product.featured_image | image_url: 'small' }}" alt="{{ item.product.title }}">
              {% endif %}
              <div class="cart-item-details">
                <p class="cart-title">{{ item.quantity }} × {{ item.product.title }}</p>
                {% if item.variant.title != 'Default Title' %}
                  <p class="cart-variant">{{ item.variant.title }}</p>
                {% endif %}
                <p class="cart-price">{{ item.line_price | money }}</p>
              </div>
            </div>
          {% endfor %}
          <div class="cart-subtotal"><strong>Subtotal:</strong> {{ cart.total_price | money }}</div>
          <a href="{{ routes.cart_url }}" class="button">Checkout</a>
        {% else %}
          <p>Your cart is empty.</p>
        {% endif %}
      </div>
    </div>
  </div>

  <div id="search-box" class="dropdown hidden">
    <form action="{{ routes.search_url }}" method="get" class="search-form">
      <input name="q" type="search" class="search-input" placeholder="Search products…">
    </form>
    <div id="predictive-results" class="predictive-results hidden"></div>
  </div>
</header>

<script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.2/gsap.min.js"></script>
<script>
  document.addEventListener('DOMContentLoaded', () => {
    const $ = (sel) => document.querySelector(sel);
    const toggle = (el) => {
      if (el.classList.contains('hidden')) {
        el.classList.remove('hidden');
        gsap.fromTo(el, { scale: 0.95, opacity: 0 }, { scale: 1, opacity: 1, duration: 0.25 });
      } else {
        gsap.to(el, { scale: 0.95, opacity: 0, duration: 0.2, onComplete: () => el.classList.add('hidden') });
      }
    };

    $('#menu-toggle').onclick = () => {
      toggle($('#menu-dropdown'));
      $('#cart-dropdown').classList.add('hidden');
      $('#search-box').classList.add('hidden');
    };
    $('#cart-toggle').onclick = () => {
      toggle($('#cart-dropdown'));
      $('#menu-dropdown').classList.add('hidden');
      $('#search-box').classList.add('hidden');
    };
    $('#search-toggle').onclick = () => {
      toggle($('#search-box'));
      $('#menu-dropdown').classList.add('hidden');
      $('#cart-dropdown').classList.add('hidden');
    };

    // Header shrink on scroll
    let shrink = false;
    window.addEventListener('scroll', () => {
      const header = $('.header-wrapper');
      if (window.scrollY > 50 && !shrink) {
        shrink = true;
        gsap.to(header, { background: 'rgba(255,255,255,0.9)', padding: '0.5rem', duration: 0.25 });
      } else if (window.scrollY <= 50 && shrink) {
        shrink = false;
        gsap.to(header, { background: 'transparent', padding: '1rem', duration: 0.25 });
      }
    });

    // Predictive search
    let timeout;
    const input = document.querySelector('.search-input');
    const results = $('#predictive-results');
    input?.addEventListener('input', () => {
      const q = input.value.trim();
      clearTimeout(timeout);
      if (q.length < 2) return results.classList.add('hidden');
      timeout = setTimeout(() => {
        fetch(`/search/suggest.json?q=${q}&resources[type]=product&resources[limit]=5`)
          .then((r) => r.json())
          .then((data) => {
            const products = data.resources.results.products;
            results.innerHTML = products.length
              ? products
                  .map(
                    (p) => `
              <a class="result-item" href="${p.url}">
                <img src="${p.image}" alt="${p.title}" />
                <div><p>${p.title}</p><span>${p.price}</span></div>
              </a>`
                  )
                  .join('')
              : '<p class="no-results">No results found</p>';
            results.classList.remove('hidden');
          });
      }, 300);
    });
  });
</script>

<style>
  .header-wrapper {
    position: sticky;
    top: 0;
    width: 100%;
    z-index: 999;
    background: transparent;
    transition: background 0.3s ease;
  }
  .header-inner {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1rem;
  }
  .icon-button {
    width: 40px;
    height: 40px;
    background: #fff;
    border: none;
    border-radius: 6px;
    display: flex;
    align-items: center;
    justify-content: center;
    box-shadow: 0 1px 4px rgba(0, 0, 0, 0.1);
    margin: 0 0.25rem;
  }
  .dropdown {
    position: absolute;
    top: 60px;
    right: 0;
    background: white;
    border-radius: 10px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    padding: 1rem;
    width: 280px;
    max-height: 70vh;
    overflow-y: auto;
  }
  #menu-dropdown {
    left: 0;
    right: auto;
  }
  .menu-link {
    padding: 0.5rem 0;
    display: block;
    text-decoration: none;
    color: #000;
  }
  .header-logo .logo-img {
    max-height: 40px;
    width: auto;
  }
  .search-form {
    width: 100%;
  }
  .search-input {
    width: 100%;
    border: none;
    border-radius: 999px;
    padding: 0.5rem 1rem;
    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.08);
  }
  .predictive-results {
    margin-top: 0.5rem;
    background: #fff;
    border-radius: 10px;
    overflow: hidden;
  }
  .result-item {
    display: flex;
    align-items: center;
    padding: 0.5rem;
    text-decoration: none;
    color: #000;
  }
  .result-item img {
    width: 40px;
    height: 40px;
    object-fit: cover;
    margin-right: 0.5rem;
  }
  .cart-item {
    display: flex;
    gap: 0.75rem;
    align-items: center;
  }
  .cart-item img {
    width: 40px;
    height: 40px;
    object-fit: cover;
    border-radius: 6px;
  }
  .cart-item-details {
    flex: 1;
  }
  .cart-subtotal {
    border-top: 1px solid #eee;
    padding-top: 0.5rem;
  }
  .button {
    display: inline-block;
    padding: 0.5rem 1rem;
    background: #000;
    color: #fff;
    border-radius: 4px;
    text-decoration: none;
  }
  .hidden {
    display: none !important;
  }
  @media (max-width: 768px) {
    .header-inner {
      flex-direction: column;
      padding: 0.5rem;
    }
    .header-left,
    .header-right {
      width: 100%;
      justify-content: center;
    }
    .dropdown {
      width: 90%;
      left: 50%;
      transform: translateX(-50%);
    }
  }
</style>
